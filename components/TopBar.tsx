"use client";

interface TopBarProps {
  userInitial?: string;
  onAddItem?: () => void;
  currentDate?: string;
}

// Logo component using currentColor for theme adaptation
const SjofnLogo = () => (
  <svg
    width="89"
    height="16"
    viewBox="0 0 89 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M8.45117 0.000976562C12.665 0.232298 16.0107 3.72256 16.0107 7.99414C16.0105 12.4151 12.4259 15.999 8.00488 15.999C3.58405 15.9988 0.000238376 12.415 0 7.99414C0 3.72782 3.33747 0.241002 7.54395 0.00195312C3.52051 0.24598 2.67776 3.73034 2.67773 7.99316C2.67773 12.4142 3.5841 15.9988 8.00488 15.999C12.4261 15.999 13 12.4144 13 7.99316C13 3.72525 12.4655 0.237538 8.45117 0.000976562Z"
      fill="currentColor"
    />
    <g clipPath="url(#clip0_95_936)">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M26.1492 4.41951C26.9551 4.41957 27.6436 4.60388 28.2146 4.97322C28.7856 5.33151 29.2228 5.80758 29.5251 6.40095C29.8275 6.99438 29.9782 7.63301 29.9783 8.31599C29.9783 8.43918 29.9729 8.56292 29.9617 8.68611V9.10603H23.4949C23.5285 9.7218 23.6685 10.2367 23.9148 10.651C24.1723 11.054 24.4912 11.3566 24.8718 11.5582C25.2637 11.7597 25.6783 11.8609 26.115 11.8609C26.7308 11.8609 27.2122 11.7317 27.5593 11.4742C27.9065 11.2166 28.1702 10.8581 28.3494 10.399H29.7439C29.5535 11.1717 29.1553 11.8273 28.5505 12.3648C27.9458 12.891 27.1339 13.1539 26.115 13.1539C25.3311 13.1539 24.6367 12.9751 24.032 12.6168C23.4386 12.2473 22.968 11.7379 22.6208 11.0885C22.2737 10.4277 22.1003 9.6602 22.1003 8.78669C22.1003 7.91334 22.2684 7.15197 22.6042 6.50251C22.9514 5.84179 23.4273 5.33158 24.032 4.97322C24.6367 4.60366 25.3429 4.41951 26.1492 4.41951ZM26.115 5.67927C25.4656 5.67931 24.8948 5.87531 24.4021 6.26716C23.9206 6.65912 23.6235 7.20812 23.5115 7.91365H28.5847C28.5399 7.2194 28.2879 6.67571 27.8289 6.28376C27.3809 5.88061 26.8093 5.67927 26.115 5.67927Z"
        fill="currentColor"
      />
      <path
        d="M49.4177 4.41951C50.392 4.41951 51.1595 4.64343 51.7195 5.09138C52.2792 5.52807 52.5981 6.155 52.6765 6.97224H51.283C51.2493 6.56919 51.0524 6.25034 50.6941 6.01521C50.347 5.76897 49.9107 5.64513 49.3845 5.64509C48.8358 5.64509 48.4095 5.75165 48.1072 5.96443C47.805 6.16599 47.6541 6.43519 47.6541 6.77107C47.6541 7.10697 47.8221 7.38697 48.158 7.61091C48.5051 7.82369 49.0487 7.96364 49.7878 8.03083C50.37 8.09803 50.9021 8.21002 51.3835 8.36677C51.8649 8.52354 52.2452 8.77018 52.5251 9.10603C52.8163 9.44199 52.9626 9.91243 52.9626 10.5172C52.9738 11.0209 52.8337 11.4745 52.5427 11.8775C52.2628 12.2693 51.8706 12.5828 51.3669 12.8179C50.8631 13.0419 50.2804 13.1538 49.6199 13.1539C48.5563 13.1539 47.6936 12.9081 47.033 12.4156C46.3835 11.9117 46.0196 11.2226 45.9412 10.3492H47.4021C47.4693 10.8082 47.6934 11.1831 48.074 11.4742C48.4659 11.7654 48.9923 11.9107 49.6531 11.9107C50.2802 11.9107 50.7452 11.7771 51.0476 11.5084C51.361 11.2397 51.5172 10.9315 51.5173 10.5845C51.5173 10.1143 51.333 9.79454 50.9636 9.62654C50.5941 9.44737 50.0396 9.31281 49.3005 9.22322C48.4158 9.12243 47.6817 8.8823 47.0994 8.50154C46.5171 8.12078 46.2263 7.54915 46.2263 6.78767C46.2263 6.10467 46.5118 5.53929 47.0828 5.09138C47.6539 4.64346 48.4323 4.41953 49.4177 4.41951Z"
        fill="currentColor"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M61.2878 4.41951C62.0717 4.41953 62.7662 4.59828 63.3708 4.95662C63.9754 5.31492 64.4515 5.82439 64.7986 6.48494C65.1457 7.13446 65.3191 7.902 65.3191 8.78669C65.3191 9.6714 65.1457 10.4443 64.7986 11.1051C64.4515 11.7545 63.9755 12.2584 63.3708 12.6168C62.7662 12.9751 62.0717 13.1539 61.2878 13.1539C60.504 13.1539 59.8095 12.9751 59.2048 12.6168C58.6002 12.2585 58.1243 11.7545 57.7771 11.1051C57.4299 10.4443 57.2566 9.6714 57.2566 8.78669C57.2566 7.902 57.4299 7.13446 57.7771 6.48494C58.1242 5.82442 58.6002 5.3149 59.2048 4.95662C59.8095 4.59832 60.504 4.41951 61.2878 4.41951ZM61.2878 5.76326C60.8175 5.76326 60.3859 5.86981 59.9939 6.08259C59.6022 6.29532 59.2885 6.62521 59.0535 7.07283C58.8183 7.52077 58.7009 8.09238 58.7009 8.78669C58.7009 9.82818 58.9528 10.5957 59.4568 11.0885C59.9607 11.5698 60.5712 11.8101 61.2878 11.8101C61.7693 11.8101 62.2065 11.7035 62.5984 11.4908C62.99 11.278 63.2984 10.9482 63.5222 10.5006C63.7574 10.0526 63.8748 9.48102 63.8748 8.78669C63.8748 8.09238 63.7574 7.52077 63.5222 7.07283C63.2983 6.62519 62.99 6.29534 62.5984 6.08259C62.2065 5.86984 61.7693 5.76328 61.2878 5.76326Z"
        fill="currentColor"
      />
      <path
        d="M38.3542 4.41951C39.3733 4.41951 40.1355 4.722 40.6394 5.32673C41.1543 5.93145 41.4119 6.80486 41.4119 7.94685V12.9527H40.0007V8.11482C40.0007 7.3757 39.8382 6.79871 39.5134 6.38435C39.1887 5.95893 38.6847 5.74666 38.0017 5.74665C37.341 5.74665 36.7812 5.97598 36.322 6.43513C35.8629 6.88305 35.6336 7.53236 35.6335 8.38337V12.9527H34.2224V4.62068H35.3982L35.5496 5.88044H35.6335C35.8575 5.47749 36.2099 5.1359 36.6912 4.85603C37.1727 4.56489 37.7272 4.41954 38.3542 4.41951Z"
        fill="currentColor"
      />
      <path
        d="M76.7761 5.91462H75.0457C74.3625 5.91462 73.8361 6.14397 73.4666 6.6031C73.097 7.05105 72.9119 7.62805 72.9119 8.33357V11.7437H75.533V12.9527H69.3679V11.7437H71.5007V6.33455C71.5007 6.05473 71.3669 5.91478 71.0984 5.91462H69.3679V4.62068H71.6189C71.9883 4.62072 72.2846 4.72198 72.5085 4.92341C72.7325 5.12499 72.8445 5.42208 72.8445 5.81404V6.16658H72.9119C73.0462 5.60685 73.2984 5.31648 73.6677 5.01423C74.0484 4.71191 74.575 4.56017 75.2468 4.56013H76.7761V5.91462Z"
        fill="currentColor"
      />
      <path
        d="M84.0066 4.55232C85.003 4.55237 85.5016 5.05013 85.5017 6.04646L85.4978 11.7437H88.1511V12.9527H81.4324V11.7437H84.0867V6.25056C84.0867 5.97068 83.9465 5.83073 83.6667 5.83064H81.4324L81.4363 4.55232H84.0066Z"
        fill="currentColor"
      />
      <path
        d="M84.6912 0.857983C85.0159 0.857984 85.2904 0.969946 85.5144 1.19392C85.7496 1.40669 85.8669 1.67581 85.8669 2.00056C85.8669 2.3139 85.7493 2.58236 85.5144 2.80622C85.2904 3.0302 85.0159 3.14216 84.6912 3.14216C84.3552 3.14216 84.0753 3.0302 83.8513 2.80622C83.6275 2.58234 83.5154 2.31394 83.5154 2.00056C83.5154 1.6758 83.6273 1.4067 83.8513 1.19392C84.0753 0.969993 84.3552 0.857983 84.6912 0.857983Z"
        fill="currentColor"
      />
    </g>
    <defs>
      <clipPath id="clip0_95_936">
        <rect
          width="66.0559"
          height="15.784"
          fill="white"
          transform="translate(22.1003 0.107983)"
        />
      </clipPath>
    </defs>
  </svg>
);

export default function TopBar({
  userInitial = "B",
  onAddItem,
  currentDate,
}: TopBarProps) {
  // Format date string to "Jun 29" format
  const formatDate = (dateString?: string) => {
    const monthNames = [
      "Jan",
      "Feb",
      "Mar",
      "Apr",
      "May",
      "Jun",
      "Jul",
      "Aug",
      "Sep",
      "Oct",
      "Nov",
      "Dec",
    ];

    // Use provided date or fall back to current date
    const date = dateString ? new Date(dateString) : new Date();
    const month = monthNames[date.getMonth()];
    const day = date.getDate();
    return `${month} ${day}`;
  };

  return (
    <div className="sf-top-bar sticky top-0 bg-sf-bg-default z-50 p-[24px_16px_16px_16px]">
      <div className="sf-top-bar-content w-full max-w-sjofn mx-auto flex items-center justify-between">
        {/* Left: Logo, divider, and date */}
        <div className="sf-top-bar-left flex items-center gap-[12px]">
          <div className="sf-logo box-border content-stretch flex flex-row gap-1.5 items-center justify-start p-0 relative text-fg-default">
            <div className="relative shrink-0 w-[89px] h-[16px] mt-[2px]">
              <div className="absolute inset-0 flex items-center justify-center">
                <SjofnLogo />
              </div>
            </div>
          </div>

          {/* Vertical divider */}
          <div className="sf-divider bg-sf-fg-default w-[1px] h-[16px] opacity-[0.15]"></div>

          <span className="sf-date-label font-dm-mono font-light text-sf-fg-default text-17 mt-1px">
            {formatDate(currentDate)}
          </span>
        </div>

        {/* Right: Add button */}
        <div className="sf-top-bar-right flex items-center">
          <button
            className="sf-add-button flex items-center gap-2 transition-colors duration-150 ease-out text-fg-default px-3 py-1.5 p-[2px_4px] rounded-[4px] bg-transparent border-none cursor-pointer"
            onClick={onAddItem}
            onMouseEnter={(e) => {
              e.currentTarget.style.backgroundColor =
                "rgba(var(--fg-default-rgb), 0.1)";
            }}
            onMouseLeave={(e) => {
              e.currentTarget.style.backgroundColor = "transparent";
            }}
            onMouseDown={(e) => {
              e.currentTarget.style.backgroundColor =
                "rgba(var(--fg-default-rgb), 0.15)";
            }}
            onMouseUp={(e) => {
              e.currentTarget.style.backgroundColor =
                "rgba(var(--fg-default-rgb), 0.1)";
            }}
          >
            <svg
              width="12"
              height="12"
              viewBox="0 0 12 12"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M6 1V11" stroke="currentColor" strokeLinecap="round" />
              <path d="M11 6L1 6" stroke="currentColor" strokeLinecap="round" />
            </svg>
            <span className="font-dm-mono font-light text-sf-fg-default text-sm add-item-text">
              Add Item
            </span>
            <span className="font-dm-mono font-normal text-sf-fg-default text-xs opacity-60 keyboard-shortcut-text">
              [⌘+↩]
            </span>
          </button>
        </div>
      </div>
    </div>
  );
}
